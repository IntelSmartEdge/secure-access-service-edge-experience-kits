# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2021 Intel Corporation
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      {{- range $key, $value := $.Values.matchLabels }}
      {{ $key }}: {{ toYaml $value }}
      {{- end }}
  template:
    metadata:
      labels:
        {{- range $key, $value := $.Values.matchLabels }}
        {{ $key }}: {{ toYaml $value }}
        {{- end }}
    spec:
      initContainers:
        - image: "{{ .Values.initContainer.image }}:{{ .Values.initContainer.tag }}"
          imagePullPolicy: {{ .Values.initContainer.imagePullPolicy }}
          name: {{ .Values.initContainer.name }}
          command:
            - /bin/chown
            - -R
            - "{{ .Values.securityContext.runAsUser }}"
            - /tmp
          volumeMounts:
            - name: {{ .Values.pckCacheVolume.name }}
              mountPath: {{ .Values.pckCacheVolume.mountPath }}
      containers:
        - name: {{ .Values.container.name }}
          securityContext:
            runAsUser: {{ .Values.securityContext.runAsUser }}
          image: "{{ .Values.container.image_repo }}/{{ .Values.container.image }}:{{ .Values.container.tag }}"
          imagePullPolicy: {{ .Values.container.imagePullPolicy }}
          volumeMounts:
            - name: {{ .Values.container.certs.volumeName }}
              mountPath: {{ .Values.container.certs.dest }}
            - name: {{ .Values.configmap.name }}
              mountPath: {{ .Values.container.config.dest }}
              subPath: {{ .Values.container.config.filename }}
            - name: {{ .Values.pckCacheVolume.name }}
              mountPath: {{ .Values.pckCacheVolume.mountPath }}
          ports:
            - containerPort: {{ .Values.container.port }}
      volumes:
        - name: {{ .Values.container.certs.volumeName }}
          secret:
            secretName: {{ .Values.container.certs.certSecretName }}
            items:
            - key: tls.key
              path: private.pem
            - key: tls.crt
              path: file.crt
        - name: {{ .Values.configmap.name }}
          configMap:
            name: {{ .Values.configmap.name }}
        - name: {{ .Values.pckCacheVolume.name }}
          hostPath:
            path: {{ .Values.pckCacheVolume.hostPath }}
            type: DirectoryOrCreate
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
