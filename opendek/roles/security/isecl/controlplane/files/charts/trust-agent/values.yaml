# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2021 Intel Corporation

# Default values for ta.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

namespace: isecl
daemonSetName: ta

txt:
  enabled: false

suefi:
  enabled: true

image:
  repository: isecl/tagent
  pullPolicy: IfNotPresent 
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v4.1.1"

pauseContainerImage: gcr.io/google_containers/pause

nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  privileged: true

ports:
  - containerPort: 1443
    hostPort: 31443

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

taConfiguration:
  CMS_TLS_CERT_SHA384: ""
  AAS_API_URL: https://aas-svc.isecl.svc.cluster.local:8444/aas/v1
  CMS_BASE_URL: https://cms-svc.isecl.svc.cluster.local:8445/cms/v1
  LOG_LEVEL: info
  HVS_URL: https://hvs-svc.isecl.svc.cluster.local:8443/hvs/v2/
  PROVISION_ATTESTATION: "y"
  TA_ENABLE_CONSOLE_LOG: "true"
  TA_SERVICE_MODE: ""
  NATS_SERVERS: ""
  NATS_TLS_COMMON_NAME: "NATS TLS Certificate"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity:
  txtNodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
          - key: node.type
            operator: In
            values:
              - "TXT-ENABLED"
  suefiNodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
          - key: node.type
            operator: In
            values:
              - "SUEFI-ENABLED"

proxyConfig:
  - name: http_proxy
    value: <http_proxy>
  - name: https_proxy
    value: <https_proxy>
  - name: all_proxy
    value: <all_proxy>
  - name: no_proxy
    value: <no_proxy>

volumeConfiguration:
  taLogsVolume:
    mountPath: /var/log/trustagent/
    hostPath: /var/log/trustagent
    type: DirectoryOrCreate
  taVolume:
    mountPath: /opt/trustagent
    hostPath: /opt/trustagent
    type: Directory
  taConfigVolume:
    mountPath: /opt/trustagent/configuration
    hostPath: /opt/trustagent/configuration
    type: DirectoryOrCreate
  taBackupVolume:
    mountPath: /tmp/trustagent_backup
    hostPath: /tmp/trustagent_backup
    type: DirectoryOrCreate
  taHostnamePath:
    mountPath: /etc/hostname
    readOnly: true
    hostPath: /etc/hostname
    type: File
  taHostsPath:
    mountPath: /etc/hosts
    readOnly: true
    hostPath: /etc/hosts
    type: File
  taHostOsPath:
    mountPath: /etc/os-release
    readOnly: true
    hostPath: /etc/os-release
    type: File
  taMemoryPath:
    mountPath: /dev/mem
    readOnly: true
    hostPath: /dev/mem
  taAcpiPath:
    mountPath: /sys/firmware/acpi/tables/TPM2
    readOnly: true
    hostPath: /sys/firmware/acpi/tables/TPM2
  wlaConfigVolume:
    mountPath: /etc/workload-agent/
    hostPath: /etc/workload-agent
    type: DirectoryOrCreate
  taSecrets:
    mountPath: /etc/secrets/
    readOnly: true
  tpmrm:
    mountPath: /dev/tpmrm0
    hostPath: /dev/tpmrm0
  txtStat:
    mountPath: /usr/sbin/txt-stat
    hostPath: /usr/sbin/txt-stat
  uefi:
    mountPath: /sys/firmware/dmi/tables/DMI
    readOnly: true
    hostPath: /sys/firmware/dmi/tables/DMI
  efi:
    mountPath: /sys/firmware/efi
    readOnly: true
    hostPath: /sys/firmware/efi

upgrade:
  enabled: false
  initContainer:
    - image: busybox:1.32
      imagePullPolicy: Always
      name: copy-backup
      command: ["/bin/sh", "-c"]
      args:
      - >
        cp -r /opt/trustagent/* /tmp/trustagent_backup/
  container:
    image: <image-name>:<tag>
    imagePullPolicy: Always
    command: ["/container_upgrade.sh"]
    securityContext:
      privileged: true
  environment:
    configDir: /opt/trustagent
    componentVersion: <component-exising-installed-version>

rollback:
  enabled: false
  initContainer:
    - image: busybox:1.32
      imagePullPolicy: Always
      name: copy-backup
      command: ["/bin/sh", "-c"]
      args:
      - >
        cp -r /tmp/trustagent_backup/* /opt/trustagent/
