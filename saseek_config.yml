# INTEL CONFIDENTIAL
#
# Copyright 2022 Intel Corporation.
#
# This software and the related documents are Intel copyrighted materials, and your use of
# them is governed by the express license under which they were provided to you ("License").
# Unless the License provides otherwise, you may not use, modify, copy, publish, distribute,
# disclose or transmit this software or the related documents without Intel's prior written permission.
#
# This software and the related documents are provided as is, with no express or implied warranties,
# other than those that are expressly stated in the License.

# Pass github.com username and generated personal token for that user
# (providing only token is not enough, since ESP requires username as well)
# It is assumed that both repositories (ESP and profiles) are on the same github site,
# accessible with the same personal token belonging to same user.
git:
  user: ''
  password: '' # The 'password' field accepts one of two values git password or token.

esp:
  url: https://github.com/intel/Edge-Software-Provisioner
  branch: v2.0.4
  dest_dir: './esp'

dnsmasq:
  # enable only if on isolated network, with no other DHCP servers running!
  # (dnsmasq is required for PXE boot only)
  enabled: false
  # Following values are mapped 1:1 to ESP config (if left empty, it will be deduced by the ESP
  # from current network settings)
  dhcp_range_minimum: ''      # e.g. 192.168.1.100
  dhcp_range_maximum: ''      # e.g. 192.168.1.250
  host_ip: ''                 # e.g. 192.168.1.2
  network_broadcast_ip: ''    # e.g. 192.168.1.255
  network_gateway_ip: ''      # e.g. 192.168.1.1
  # if behind proxy, primary dns should be set to gateway ip!
  network_dns_primary: ''     # e.g. 8.8.4.4
  network_dns_secondary: ''   # e.g. 8.8.8.8

docker:
  # put your local docker mirrors addresses here (to prevent issue with docker limit rate during deploy)
  registry_mirrors: []
  # dockerhub credentials - applies only to live os stage
  dockerhub:
    username: ""
    password: ""

# ntp server address used during deploy, recommended to enable for SASE
ntp_server: ''

# list of profiles (at least one profile should be defined)
profiles:
  - name: Smart_Edge_Open_Secure_Access_Service_Edge_Experience_Kit
    url: https://github.com/smart-edge-open/profiles.git
    branch: smart-edge-open-22.05
    scenario: single-node       # possible scenarios: single-node, multi-node
    experience_kit:
      url: https://github.com/smart-edge-open/secure-access-service-edge-experience-kits
      branch: smart-edge-open-22.05
      deployment: sase
    controlplane_mac: ''
    account:
      username: smartedge-open
      password: smartedge-open
    bios:
      tpm: false
      secure_boot: false
    # to further customize ansible configuration for each group and each host,
    # put that config in a form of YAML syntax, under desired group/host section below.
    group_vars:
      groups:
        all:
          pccs_enable: false
          # enable on demand
          install_hwe_kernel_enable: false
          sgx_enabled: false
          platform_attestation_node: false
          sriov_network_operator_enable: false
          sriov_network_operator_configure_enable: false
          e810_driver_enable: false
          kubevirt_enable: false
          rook_ceph_enabled: false
          telemetry_enable: false
        controller_group:
        edgenode_group:

  - name: Smart_Edge_Open_Secure_Access_Service_Edge_Experience_Kit_Dell_R750
    url: https://github.com/smart-edge-open/profiles.git
    branch: smart-edge-open-22.05
    scenario: single-node       # possible scenarios: single-node, multi-node
    experience_kit:
      url: https://github.com/smart-edge-open/secure-access-service-edge-experience-kits
      branch: smart-edge-open-22.05
      deployment: sase
    controlplane_mac: ''
    account:
      username: smartedge-open
      password: smartedge-open
    bios:
      tpm: true
      secure_boot: true
    # to further customize ansible configuration for each group and each host,
    # put that config in a form of YAML syntax, under desired group/host section below.
    group_vars:
      groups:
        all:
          pccs_enable: false
          sgx_enabled: true
          install_hwe_kernel_enable: true
          platform_attestation_node: true
          sriov_network_operator_enable: true
          sriov_network_operator_configure_enable: true
          e810_driver_enable: true
          kubevirt_enable: true
          # MUST customize BEFORE use sgx/isecl/PA
          # sgx_pccs_ip: ""
          # sgx_pccs_port: "32666"
          # isecl_control_plane_ip: ""
          # isecl_cms_tls_hash: ""
          # kmra_apphsm_ip: ""
          # pccs_api_key: ""
          # pccs_user_password: ""
        controller_group:
        edgenode_group:

  - name: SASE_ISecL_Controller_and_SDEWAN_Controller
    url: https://github.com/smart-edge-open/profiles.git
    branch: smart-edge-open-22.05
    scenario: single-node       # possible scenarios: single-node, multi-node
    experience_kit:
      url: https://github.com/smart-edge-open/secure-access-service-edge-experience-kits
      branch: smart-edge-open-22.05
      deployment: verification_controller
    controlplane_mac: ''
    account:
      username: smartedge-open
      password: smartedge-open
    bios:
      tpm: false
      secure_boot: false
    # to further customize ansible configuration for each group and each host,
    # put that config in a form of YAL syntax, under desired group/host section below.
    group_vars:
      groups:
        all:
          # refer to opendek/deployments/verification_controller/all.yml
          platform_attestation_controller: true
          # a sample isecl_ta_san_list, customize before use
          isecl_ta_san_list: ""
          pccs_enable: true
          kmra_enable: true
          psp_enabled: true
          sgx_prv_gid: 1002
          cpu: {}
          sgx_enabled: false
          install_hwe_kernel_enable: false
          platform_attestation_node: false
          sriov_network_operator_enable: false
          sriov_network_operator_configure_enable: false
          e810_driver_enable: false
          kubevirt_enable: false
          rook_ceph_enabled: false
          telemetry_enable: false
          harbor_registry_enable: false
          ne_nfd_enable: false
          # MUST customize BEFORE use sgx/isecl/PA
          # pccs_api_key: ""
          # pccs_user_password: ""
        controller_group:
        edgenode_group:

# hosts:
#   # full example for this element
#   - name: master # this will be set as a hostname
#     mac: 11:22:33:44:55:66 # this host can be identified from the profile to set a hostname
#     bmc: # bmc settings
#       address: 1.2.3.4 # bmc address
#       user: user # bmc user name
#       password: password # bmc password
#     bios: # bios settings
#       tpm: false # TPM
#       secure_boot: false # Secure Boot

usb_images:
  build: true             # change to false to disable any USB image building
  bios: false             # enable building image in legacy bios format
  efi: true               # enable building image in uefi format
  all_in_one: false       # enable single image per BIOS with all of the profiles included
  output_path: './out'    # dir where built images will be copied to
